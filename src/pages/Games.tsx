import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import SpaceCollector from '@/components/SpaceCollector';
import ChickenClicker from '@/components/ChickenClicker';
import WalkingGame from '@/components/WalkingGame';
import DefenseGame from '@/components/DefenseGame';
import RacingGame from '@/components/RacingGame';
import PuzzleGame from '@/components/PuzzleGame';
import RPGGame from '@/components/RPGGame';
import LiveChat from '@/components/LiveChat';
import SnakeGame from '@/components/SnakeGame';
import TetrisGame from '@/components/TetrisGame';
import FlappyBirdGame from '@/components/FlappyBirdGame';
import Game2048 from '@/components/Game2048';
import MemoryGame from '@/components/MemoryGame';
import AdminPanel from '@/components/AdminPanel';
import { AdminProvider } from '@/contexts/AdminContext';
import Icon from '@/components/ui/icon';

type GameType = string;

interface GameInfo {
  id: GameType;
  title: string;
  description: string;
  emoji: string;
  component?: React.ComponentType;
  category: string;
  color?: string;
  gameType?: 'clicker' | 'dodge' | 'collect' | 'memory' | 'reaction' | 'platformer';
  featured?: boolean;
}

const games: GameInfo[] = [
  { id: 'space', title: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –°–±–æ—Ä', description: '–°–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã –≤ –∫–æ—Å–º–æ—Å–µ!', emoji: 'üöÄ', component: SpaceCollector, category: 'arcade', featured: true },
  { id: 'chicken', title: '–ö—É—Ä–∏–Ω–∞—è –ò–º–ø–µ—Ä–∏—è', description: '–°—Ç—Ä–æ–π –∫—É—Ä–∏–Ω—É—é –∏–º–ø–µ—Ä–∏—é!', emoji: 'üêî', component: ChickenClicker, category: 'clicker', featured: true },
  { id: 'walking', title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', description: '–ò—Å—Å–ª–µ–¥—É–π 2D –º–∏—Ä!', emoji: 'üåç', component: WalkingGame, category: 'adventure', featured: true },
  { id: 'defense', title: '–ó–∞—â–∏—Ç–Ω–∏–∫', description: '–ó–∞—â–∏—â–∞–π –∫—Ä–µ–ø–æ—Å—Ç—å!', emoji: '‚öîÔ∏è', component: DefenseGame, category: 'strategy', featured: true },
  { id: 'racing', title: '–°—É–ø–µ—Ä –ì–æ–Ω–∫–∏', description: '–ì–æ–Ω–æ—á–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è!', emoji: 'üèéÔ∏è', component: RacingGame, category: 'racing', featured: true },
  { id: 'puzzle', title: '–ü—è—Ç–Ω–∞—à–∫–∏', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞!', emoji: 'üß©', component: PuzzleGame, category: 'puzzle', featured: true },
  { id: 'rpg', title: 'RPG –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ', description: '–°—Ä–∞–∂–∞–π—Å—è —Å –≤—Ä–∞–≥–∞–º–∏!', emoji: 'üó°Ô∏è', component: RPGGame, category: 'rpg', featured: true },
  { id: 'chat', title: '–ñ–∏–≤–æ–π –ß–∞—Ç', description: '–û–±—â–∞–π—Å—è –æ–Ω–ª–∞–π–Ω!', emoji: 'üí¨', component: LiveChat, category: 'social', featured: true },
  
  { id: 'snake', title: '–ó–º–µ–π–∫–∞', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∑–º–µ–π–∫–∞!', emoji: 'üêç', component: SnakeGame, category: 'arcade', featured: true },
  { id: 'tetris', title: '–¢–µ—Ç—Ä–∏—Å', description: '–°–æ–±–∏—Ä–∞–π –ª–∏–Ω–∏–∏!', emoji: 'üß±', component: TetrisGame, category: 'puzzle', featured: true },
  { id: 'flappy', title: 'Flappy Bird', description: '–õ–µ—Ç–∞–π –º–µ–∂–¥—É —Ç—Ä—É–±!', emoji: 'üê¶', component: FlappyBirdGame, category: 'arcade', featured: true },
  { id: '2048', title: '2048', description: '–°–æ–±–µ—Ä–∏ –ø–ª–∏—Ç–∫—É 2048!', emoji: 'üéØ', component: Game2048, category: 'puzzle', featured: true },
  { id: 'memory', title: '–ü–∞–º—è—Ç—å', description: '–ù–∞–π–¥–∏ –ø–∞—Ä—ã –∫–∞—Ä—Ç!', emoji: 'üé¥', component: MemoryGame, category: 'memory', featured: true },
  

  
  { id: 'tower', title: '–ó–∞—â–∏—Ç–∞ –±–∞—à–Ω–∏', description: '–û—Å—Ç–∞–Ω–æ–≤–∏ –≤—Ä–∞–≥–æ–≤!', emoji: 'üè∞', category: 'strategy', color: 'stone', gameType: 'clicker' },
  { id: 'cards', title: '–ü–∞—Å—å—è–Ω—Å', description: '–†–∞—Å–∫–ª–∞–¥—ã–≤–∞–π –∫–∞—Ä—Ç—ã!', emoji: 'üÉè', category: 'puzzle', color: 'red', gameType: 'memory' },
  { id: 'minesweeper', title: '–°–∞–ø–µ—Ä', description: '–ù–∞–π–¥–∏ –≤—Å–µ –º–∏–Ω—ã!', emoji: 'üí£', category: 'puzzle', color: 'orange', gameType: 'memory' },
  { id: 'simon', title: '–°–∞–π–º–æ–Ω', description: '–ü–æ–≤—Ç–æ—Ä—è–π —Ü–≤–µ—Ç–∞!', emoji: 'üé®', category: 'memory', color: 'rainbow', gameType: 'memory' },
  { id: 'whack', title: '–ö—Ä–æ—Ç–æ–±–æ–π', description: '–ë–µ–π –ø–æ –∫—Ä–æ—Ç–∞–º!', emoji: 'üî®', category: 'arcade', color: 'brown', gameType: 'reaction' },
  
  { id: 'bubble', title: '–ü—É–∑—ã—Ä–∏', description: '–õ–æ–ø–∞–π –ø—É–∑—ã—Ä–∏!', emoji: 'ü´ß', category: 'arcade', color: 'cyan', gameType: 'clicker' },
  { id: 'fruit', title: '–§—Ä—É–∫—Ç–æ–≤—ã–π –Ω–∏–Ω–¥–∑—è', description: '–†–µ–∂—å —Ñ—Ä—É–∫—Ç—ã!', emoji: 'üçâ', category: 'arcade', color: 'red', gameType: 'reaction' },
  { id: 'jump', title: '–ü—Ä—ã–≥—É–Ω', description: '–ü—Ä—ã–≥–∞–π –≤—ã—à–µ!', emoji: 'ü¶ò', category: 'arcade', color: 'green', gameType: 'platformer' },
  { id: 'run', title: '–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –±–µ–≥', description: '–ë–µ–≥–∏ –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏!', emoji: 'üèÉ', category: 'arcade', color: 'blue', gameType: 'dodge' },
  { id: 'fly', title: '–í–µ—Ä—Ç–æ–ª–µ—Ç', description: '–ü—Ä–æ–ª–µ—Ç–∏ —á–µ—Ä–µ–∑ —Ç—É–Ω–Ω–µ–ª—å!', emoji: 'üöÅ', category: 'arcade', color: 'sky', gameType: 'dodge' },
  

  { id: 'word', title: '–°–ª–æ–≤–∞—Ä—å', description: '–°–æ–±–∏—Ä–∞–π —Å–ª–æ–≤–∞!', emoji: 'üìù', category: 'puzzle', color: 'blue', gameType: 'memory' },
  { id: 'math', title: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', description: '–†–µ—à–∏ –ø—Ä–∏–º–µ—Ä—ã!', emoji: 'üî¢', category: 'educational', color: 'green', gameType: 'memory' },
  { id: 'typing', title: '–ü–µ—á–∞—Ç–∞–Ω–∏–µ', description: '–ù–∞—É—á–∏—Å—å –ø–µ—á–∞—Ç–∞—Ç—å!', emoji: '‚å®Ô∏è', category: 'educational', color: 'gray', gameType: 'reaction' },
  { id: 'quiz', title: '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞', description: '–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!', emoji: '‚ùì', category: 'educational', color: 'yellow', gameType: 'memory' },
  
  { id: 'platformer', title: '–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä', description: '–ü—Ä—ã–≥–∞–π –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º!', emoji: 'üéÆ', category: 'platformer', color: 'orange', gameType: 'platformer' },
  { id: 'shooter', title: '–®—É—Ç–µ—Ä', description: '–°—Ç—Ä–µ–ª—è–π –ø–æ –≤—Ä–∞–≥–∞–º!', emoji: 'üî´', category: 'action', color: 'red', gameType: 'reaction' },
  { id: 'fishing', title: '–†—ã–±–∞–ª–∫–∞', description: '–õ–æ–≤–∏ —Ä—ã–±—É!', emoji: 'üé£', category: 'simulation', color: 'blue', gameType: 'clicker' },
  { id: 'farm', title: '–§–µ—Ä–º–∞', description: '–í—ã—Ä–∞—â–∏–≤–∞–π —É—Ä–æ–∂–∞–π!', emoji: 'üåæ', category: 'simulation', color: 'green', gameType: 'clicker' },
  { id: 'restaurant', title: '–†–µ—Å—Ç–æ—Ä–∞–Ω', description: '–û–±—Å–ª—É–∂–∏–≤–∞–π –∫–ª–∏–µ–Ω—Ç–æ–≤!', emoji: 'üçî', category: 'simulation', color: 'yellow', gameType: 'clicker' },
  
  { id: 'zoo', title: '–ó–æ–æ–ø–∞—Ä–∫', description: '–ó–∞–±–æ—Ç—å—Å—è –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö!', emoji: 'ü¶Å', category: 'simulation', color: 'orange', gameType: 'clicker' },
  { id: 'hotel', title: '–û—Ç–µ–ª—å', description: '–£–ø—Ä–∞–≤–ª—è–π –æ—Ç–µ–ª–µ–º!', emoji: 'üè®', category: 'simulation', color: 'blue', gameType: 'clicker' },
  { id: 'hospital', title: '–ë–æ–ª—å–Ω–∏—Ü–∞', description: '–õ–µ—á–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤!', emoji: 'üè•', category: 'simulation', color: 'red', gameType: 'clicker' },
  { id: 'school', title: '–®–∫–æ–ª–∞', description: '–£–ø—Ä–∞–≤–ª—è–π —à–∫–æ–ª–æ–π!', emoji: 'üè´', category: 'simulation', color: 'purple', gameType: 'clicker' },
  { id: 'shop', title: '–ú–∞–≥–∞–∑–∏–Ω', description: '–ü—Ä–æ–¥–∞–≤–∞–π —Ç–æ–≤–∞—Ä—ã!', emoji: 'üè™', category: 'simulation', color: 'green', gameType: 'clicker' },
  
  { id: 'ninja', title: '–ù–∏–Ω–¥–∑—è', description: '–°—Ç–∞–Ω—å –Ω–∏–Ω–¥–∑—è!', emoji: 'ü•∑', category: 'action', color: 'black', gameType: 'platformer' },
  { id: 'pirate', title: '–ü–∏—Ä–∞—Ç', description: '–ù–∞–π–¥–∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞!', emoji: 'üè¥‚Äç‚ò†Ô∏è', category: 'adventure', color: 'brown', gameType: 'collect' },
  { id: 'knight', title: '–†—ã—Ü–∞—Ä—å', description: '–°–ø–∞—Å–∏ –ø—Ä–∏–Ω—Ü–µ—Å—Å—É!', emoji: 'üõ°Ô∏è', category: 'adventure', color: 'silver', gameType: 'platformer' },
  { id: 'wizard', title: '–í–æ–ª—à–µ–±–Ω–∏–∫', description: '–ò—Å–ø–æ–ª—å–∑—É–π –º–∞–≥–∏—é!', emoji: 'üßô', category: 'rpg', color: 'purple', gameType: 'collect' },
  { id: 'robot', title: '–†–æ–±–æ—Ç', description: '–°–ø–∞—Å–∏ –º–∏—Ä!', emoji: 'ü§ñ', category: 'action', color: 'gray', gameType: 'shooter' },
  
  { id: 'alien', title: '–ò–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–µ', description: '–ó–∞—â–∏—Ç–∏ –ó–µ–º–ª—é!', emoji: 'üëΩ', category: 'action', color: 'green', gameType: 'shooter' },
  { id: 'zombie', title: '–ó–æ–º–±–∏', description: '–í—ã–∂–∏–≤–∞–π!', emoji: 'üßü', category: 'action', color: 'red', gameType: 'shooter' },
  { id: 'dino', title: '–î–∏–Ω–æ–∑–∞–≤—Ä', description: '–ë–µ–≥–∏ –∏ –ø—Ä—ã–≥–∞–π!', emoji: 'ü¶ï', category: 'arcade', color: 'green', gameType: 'dodge' },
  { id: 'penguin', title: '–ü–∏–Ω–≥–≤–∏–Ω', description: '–°–∫–æ–ª—å–∑–∏ –ø–æ –ª—å–¥—É!', emoji: 'üêß', category: 'arcade', color: 'cyan', gameType: 'dodge' },
  { id: 'cat', title: '–ö–æ—à–∫–∞', description: '–õ–æ–≤–∏ –º—ã—à–µ–π!', emoji: 'üê±', category: 'arcade', color: 'orange', gameType: 'reaction' },
  
  { id: 'dog', title: '–°–æ–±–∞–∫–∞', description: '–õ–æ–≤–∏ —Ñ—Ä–∏—Å–±–∏!', emoji: 'üêï', category: 'arcade', color: 'brown', gameType: 'reaction' },
  { id: 'bird', title: '–ü—Ç–∏—Ü–∞', description: '–õ–µ—Ç–∞–π —Å–≤–æ–±–æ–¥–Ω–æ!', emoji: 'ü¶Ö', category: 'arcade', color: 'blue', gameType: 'dodge' },
  { id: 'fish', title: '–†—ã–±–∫–∞', description: '–ü–ª—ã–≤–∏ –≤ –æ–∫–µ–∞–Ω–µ!', emoji: 'üê†', category: 'arcade', color: 'cyan', gameType: 'dodge' },
  { id: 'bee', title: '–ü—á–µ–ª–∞', description: '–°–æ–±–∏—Ä–∞–π –Ω–µ–∫—Ç–∞—Ä!', emoji: 'üêù', category: 'arcade', color: 'yellow', gameType: 'collect' },
  { id: 'butterfly', title: '–ë–∞–±–æ—á–∫–∞', description: '–õ–µ—Ç–∞–π –≤ —Å–∞–¥—É!', emoji: 'ü¶ã', category: 'arcade', color: 'purple', gameType: 'collect' },
];

export default function Games() {
  const [selectedGame, setSelectedGame] = useState<GameType | null>(null);
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState('');

  const categories = ['all', ...Array.from(new Set(games.map(g => g.category)))];

  const filteredGames = games.filter(game => {
    const matchesCategory = selectedCategory === 'all' || game.category === selectedCategory;
    const matchesSearch = game.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         game.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const selectedGameData = selectedGame ? games.find(g => g.id === selectedGame) : null;

  const getCategoryLabel = (category: string) => {
    const labels: Record<string, string> = {
      all: 'üéØ –í—Å–µ',
      arcade: 'üéÆ –ê—Ä–∫–∞–¥—ã',
      strategy: 'üß† –°—Ç—Ä–∞—Ç–µ–≥–∏–∏',
      racing: 'üèéÔ∏è –ì–æ–Ω–∫–∏',
      puzzle: 'üß© –ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∏',
      rpg: 'üó°Ô∏è RPG',
      social: 'üë• –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ',
      clicker: 'üëÜ –ö–ª–∏–∫–µ—Ä—ã',
      adventure: 'üó∫Ô∏è –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
      action: '‚öîÔ∏è –≠–∫—à–µ–Ω',
      simulation: 'üèóÔ∏è –°–∏–º—É–ª—è—Ç–æ—Ä—ã',
      platformer: 'üéØ –ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä—ã',
      memory: 'üß† –ü–∞–º—è—Ç—å',
      educational: 'üìö –û–±—É—á–∞—é—â–∏–µ',
    };
    return labels[category] || category;
  };

  return (
    <AdminProvider>
      <div className="min-h-screen bg-gradient-to-br from-pixel-dark via-gray-900 to-pixel-dark">
        <div className="container mx-auto px-4 py-8">
          <div className="flex justify-center mb-6">
            <Link 
              to="/"
              className="px-6 py-2 bg-gray-700/50 hover:bg-gray-700 text-white rounded-lg font-semibold transition-colors flex items-center gap-2 border border-gray-600/50"
            >
              ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>
          </div>

          <div className="text-center mb-8">
            <h1 className="font-orbitron text-4xl md:text-5xl text-retro-orange mb-4">
              üéÆ –ò–≥—Ä–æ–≤–∞—è –ê—Ä–∫–∞–¥–∞
            </h1>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–≥—Ä! üöÄ
            </p>
            <p className="text-sm text-retro-orange/70 mt-2">
              13 –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –∏–≥—Ä + 46 –º–∏–Ω–∏-–∏–≥—Ä —Å–æ–∑–¥–∞–Ω—ã @war_references —Å –ª—é–±–æ–≤—å—é! ‚ù§Ô∏è
            </p>
          </div>

          {selectedGame && selectedGameData ? (
            <div className="space-y-6">
              <div className="flex justify-center">
                <button
                  onClick={() => setSelectedGame(null)}
                  className="px-6 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-semibold transition-colors flex items-center gap-2"
                >
                  ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
                </button>
              </div>
              
              <div className="flex justify-center">
                {selectedGameData.component ? (
                  <selectedGameData.component />
                ) : (
                  <MiniGame 
                    id={selectedGameData.id}
                    title={selectedGameData.title}
                    emoji={selectedGameData.emoji}
                    color={selectedGameData.color || 'blue'}
                    gameType={selectedGameData.gameType || 'clicker'}
                  />
                )}
              </div>
            </div>
          ) : (
            <>
              <div className="mb-6 max-w-2xl mx-auto">
                <div className="relative">
                  <input
                    type="text"
                    placeholder="üîç –ü–æ–∏—Å–∫ –∏–≥—Ä—ã..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full px-4 py-3 bg-gray-800/50 border border-retro-orange/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-retro-orange"
                  />
                  {searchQuery && (
                    <button
                      onClick={() => setSearchQuery('')}
                      className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white"
                    >
                      ‚úï
                    </button>
                  )}
                </div>
              </div>

              <div className="flex flex-wrap justify-center gap-2 mb-8">
                {categories.map(category => (
                  <button
                    key={category}
                    onClick={() => setSelectedCategory(category)}
                    className={`px-3 py-1.5 rounded-lg font-semibold transition-all duration-300 text-xs ${
                      selectedCategory === category
                        ? 'bg-retro-orange text-white shadow-lg scale-105'
                        : 'bg-pixel-dark/50 text-retro-orange hover:bg-retro-orange/20 border border-retro-orange/30'
                    }`}
                  >
                    {getCategoryLabel(category)}
                  </button>
                ))}
              </div>

              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 max-w-7xl mx-auto">
                {filteredGames.map(game => (
                  <div
                    key={game.id}
                    onClick={() => setSelectedGame(game.id)}
                    className={`group cursor-pointer transform transition-all duration-300 hover:scale-105 ${
                      game.featured ? 'ring-2 ring-retro-orange/50' : ''
                    }`}
                  >
                    <div className="bg-gradient-to-br from-pixel-dark/80 to-gray-900/80 border border-retro-orange/30 rounded-xl p-4 h-full hover:border-retro-orange/60 hover:shadow-xl hover:shadow-retro-orange/20">
                      <div className="flex justify-between items-start mb-2">
                        <div className="text-3xl">{game.emoji}</div>
                        {game.featured && (
                          <div className="text-xs px-2 py-0.5 bg-yellow-500/20 text-yellow-400 rounded-full">
                            ‚≠ê
                          </div>
                        )}
                      </div>

                      <h3 className="font-orbitron text-sm text-retro-orange mb-1 group-hover:text-white transition-colors line-clamp-1">
                        {game.title}
                      </h3>

                      <p className="text-muted-foreground text-xs mb-2 line-clamp-2">
                        {game.description}
                      </p>

                      <div className="flex justify-center">
                        <div className="px-3 py-1 bg-retro-orange/20 group-hover:bg-retro-orange group-hover:text-white text-retro-orange rounded-lg font-semibold transition-all duration-300 text-xs">
                          üéÆ –ò–≥—Ä–∞—Ç—å
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {filteredGames.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üîç</div>
                  <p className="text-xl text-gray-400">–ò–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                  <button
                    onClick={() => {
                      setSearchQuery('');
                      setSelectedCategory('all');
                    }}
                    className="mt-4 px-6 py-2 bg-retro-orange hover:bg-retro-orange/80 text-white rounded-lg font-semibold transition-colors"
                  >
                    –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                  </button>
                </div>
              )}

              <div className="mt-12 text-center">
                <div className="inline-flex items-center gap-8 px-8 py-4 bg-pixel-dark/50 rounded-xl border border-retro-orange/30">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">{games.length}</div>
                    <div className="text-sm text-muted-foreground">–ò–≥—Ä</div>
                  </div>
                  <div className="w-px h-12 bg-retro-orange/30"></div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">{categories.length - 1}</div>
                    <div className="text-sm text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
                  </div>
                  <div className="w-px h-12 bg-retro-orange/30"></div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">100%</div>
                    <div className="text-sm text-muted-foreground">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                  </div>
                </div>
              </div>
            </>
          )}
        </div>
        
        <AdminPanel />
      </div>
    </AdminProvider>
  );
}