import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import SpaceCollector from '@/components/SpaceCollector';
import ChickenClicker from '@/components/ChickenClicker';
import WalkingGame from '@/components/WalkingGame';
import DefenseGame from '@/components/DefenseGame';
import RacingGame from '@/components/RacingGame';
import PuzzleGame from '@/components/PuzzleGame';
import RPGGame from '@/components/RPGGame';
import LiveChat from '@/components/LiveChat';
import SnakeGame from '@/components/SnakeGame';
import TetrisGame from '@/components/TetrisGame';
import FlappyBirdGame from '@/components/FlappyBirdGame';
import Game2048 from '@/components/Game2048';
import MemoryGame from '@/components/MemoryGame';
import MinesweeperGame from '@/components/MinesweeperGame';
import ColoringGame from '@/components/ColoringGame';
import BubblePopGame from '@/components/BubblePopGame';
import PianoGame from '@/components/PianoGame';
import ShapeSorterGame from '@/components/ShapeSorterGame';
import DrawingGame from '@/components/DrawingGame';
import CountingGame from '@/components/CountingGame';
import AnimalMatchGame from '@/components/AnimalMatchGame';
import ColorsGame from '@/components/ColorsGame';
import PuzzleKidsGame from '@/components/PuzzleKidsGame';
import AnimalSoundsGame from '@/components/AnimalSoundsGame';
import FindOddGame from '@/components/FindOddGame';
import SizeCompareGame from '@/components/SizeCompareGame';
import HideSeekGame from '@/components/HideSeekGame';
import BeautySalonGame from '@/components/BeautySalonGame';
import AdminPanel from '@/components/AdminPanel';
import { AdminProvider } from '@/contexts/AdminContext';
import Icon from '@/components/ui/icon';

type GameType = string;

interface GameInfo {
  id: GameType;
  title: string;
  description: string;
  emoji: string;
  component?: React.ComponentType;
  category: string;
  color?: string;
  gameType?: 'clicker' | 'dodge' | 'collect' | 'memory' | 'reaction' | 'platformer';
  featured?: boolean;
  isKids?: boolean;
}

const games: GameInfo[] = [
  { id: 'space', title: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –°–±–æ—Ä', description: '–°–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã –≤ –∫–æ—Å–º–æ—Å–µ!', emoji: 'üöÄ', component: SpaceCollector, category: 'arcade', featured: true },
  { id: 'chicken', title: '–ö—É—Ä–∏–Ω–∞—è –ò–º–ø–µ—Ä–∏—è', description: '–°—Ç—Ä–æ–π –∫—É—Ä–∏–Ω—É—é –∏–º–ø–µ—Ä–∏—é!', emoji: 'üêî', component: ChickenClicker, category: 'clicker', featured: true },
  { id: 'walking', title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', description: '–ò—Å—Å–ª–µ–¥—É–π 2D –º–∏—Ä!', emoji: 'üåç', component: WalkingGame, category: 'adventure', featured: true },
  { id: 'defense', title: '–ó–∞—â–∏—Ç–Ω–∏–∫', description: '–ó–∞—â–∏—â–∞–π –∫—Ä–µ–ø–æ—Å—Ç—å!', emoji: '‚öîÔ∏è', component: DefenseGame, category: 'strategy', featured: true },
  { id: 'racing', title: '–°—É–ø–µ—Ä –ì–æ–Ω–∫–∏', description: '–ì–æ–Ω–æ—á–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è!', emoji: 'üèéÔ∏è', component: RacingGame, category: 'racing', featured: true },
  { id: 'puzzle', title: '–ü—è—Ç–Ω–∞—à–∫–∏', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞!', emoji: 'üß©', component: PuzzleGame, category: 'puzzle', featured: true },
  { id: 'rpg', title: 'RPG –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ', description: '–°—Ä–∞–∂–∞–π—Å—è —Å –≤—Ä–∞–≥–∞–º–∏!', emoji: 'üó°Ô∏è', component: RPGGame, category: 'rpg', featured: true },
  { id: 'chat', title: '–ñ–∏–≤–æ–π –ß–∞—Ç', description: '–û–±—â–∞–π—Å—è –æ–Ω–ª–∞–π–Ω!', emoji: 'üí¨', component: LiveChat, category: 'social', featured: true },
  
  { id: 'snake', title: '–ó–º–µ–π–∫–∞', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∑–º–µ–π–∫–∞!', emoji: 'üêç', component: SnakeGame, category: 'arcade', featured: true },
  { id: 'tetris', title: '–¢–µ—Ç—Ä–∏—Å', description: '–°–æ–±–∏—Ä–∞–π –ª–∏–Ω–∏–∏!', emoji: 'üß±', component: TetrisGame, category: 'puzzle', featured: true },
  { id: 'flappy', title: 'Flappy Bird', description: '–õ–µ—Ç–∞–π –º–µ–∂–¥—É —Ç—Ä—É–±!', emoji: 'üê¶', component: FlappyBirdGame, category: 'arcade', featured: true },
  { id: '2048', title: '2048', description: '–°–æ–±–µ—Ä–∏ –ø–ª–∏—Ç–∫—É 2048!', emoji: 'üéØ', component: Game2048, category: 'puzzle', featured: true },
  { id: 'memory', title: '–ü–∞–º—è—Ç—å', description: '–ù–∞–π–¥–∏ –ø–∞—Ä—ã –∫–∞—Ä—Ç!', emoji: 'üé¥', component: MemoryGame, category: 'memory', featured: true },
  { id: 'minesweeper', title: '–°–∞–ø—ë—Ä', description: '–ù–∞–π–¥–∏ –≤—Å–µ –º–∏–Ω—ã!', emoji: 'üí£', component: MinesweeperGame, category: 'puzzle', featured: true },
  
  { id: 'coloring', title: '–†–∞—Å–∫—Ä–∞—Å–∫–∞', description: '–†–∞—Å–∫—Ä–∞—Å—å –∫–∞—Ä—Ç–∏–Ω–∫–∏!', emoji: 'üé®', component: ColoringGame, category: 'kids', featured: true, isKids: true },
  { id: 'bubbles', title: '–ü–æ–π–º–∞–π –ü—É–∑—ã—Ä–∏', description: '–õ–æ–ø–∞–π –ø—É–∑—ã—Ä–∏!', emoji: 'ü´ß', component: BubblePopGame, category: 'kids', featured: true, isKids: true },
  { id: 'piano', title: '–ü–∏–∞–Ω–∏–Ω–æ', description: '–ò–≥—Ä–∞–π –º–µ–ª–æ–¥–∏–∏!', emoji: 'üéπ', component: PianoGame, category: 'kids', featured: true, isKids: true },
  { id: 'shapes', title: '–°–æ–±–µ—Ä–∏ –§–∏–≥—É—Ä—ã', description: '–°–æ—Ä—Ç–∏—Ä—É–π —Ñ–∏–≥—É—Ä—ã!', emoji: 'üî∑', component: ShapeSorterGame, category: 'kids', featured: true, isKids: true },
  { id: 'drawing', title: '–†–∏—Å–æ–≤–∞–ª–∫–∞', description: '–†–∏—Å—É–π –≤—Å—ë, —á—Ç–æ —Ö–æ—á–µ—à—å!', emoji: 'üñåÔ∏è', component: DrawingGame, category: 'kids', featured: true, isKids: true },
  { id: 'counting', title: '–£—á–∏–º—Å—è —Å—á–∏—Ç–∞—Ç—å', description: '–°—á—ë—Ç –æ—Ç 1 –¥–æ 10!', emoji: 'üî¢', component: CountingGame, category: 'kids', featured: true, isKids: true },
  { id: 'animals', title: '–ù–∞–π–¥–∏ –ø–∞—Ä—É', description: '–ù–∞–π–¥–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö!', emoji: 'üêæ', component: AnimalMatchGame, category: 'kids', featured: true, isKids: true },
  { id: 'colors', title: '–£—á–∏–º —Ü–≤–µ—Ç–∞', description: '–ò–∑—É—á–∞–µ–º —Ü–≤–µ—Ç–∞!', emoji: 'üåà', component: ColorsGame, category: 'kids', featured: true, isKids: true },
  { id: 'puzzle-kids', title: '–ü–∞–∑–ª—ã', description: '–°–æ–±–µ—Ä–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É!', emoji: 'üß©', component: PuzzleKidsGame, category: 'kids', featured: true, isKids: true },
  { id: 'beauty-salon', title: '–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã', description: '–°–æ–∑–¥–∞–π —Å–≤–æ–π –æ–±—Ä–∞–∑!', emoji: 'üíÖ', component: BeautySalonGame, category: 'kids', featured: true, isKids: true },
  { id: 'animal-sounds', title: '–£–≥–∞–¥–∞–π –∫—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç', description: '–ó–≤—É–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö!', emoji: 'üîä', component: AnimalSoundsGame, category: 'kids', featured: true, isKids: true },
  { id: 'find-odd', title: '–ù–∞–π–¥–∏ –ª–∏—à–Ω–µ–µ', description: '–ß—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –¥—Ä—É–≥–∏–µ?', emoji: 'üîç', component: FindOddGame, category: 'kids', featured: true, isKids: true },
  { id: 'size-compare', title: '–ë–æ–ª—å—à–æ–π-–ú–∞–ª–µ–Ω—å–∫–∏–π', description: '–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã!', emoji: 'üìè', component: SizeCompareGame, category: 'kids', featured: true, isKids: true },
  { id: 'hide-seek', title: '–í–µ—Å—ë–ª—ã–µ –ü—Ä—è—Ç–∫–∏', description: '–ù–∞–π–¥–∏ –≥–¥–µ —Å–ø—Ä—è—Ç–∞–ª—Å—è!', emoji: 'üôà', component: HideSeekGame, category: 'kids', featured: true, isKids: true },
];

export default function Games() {
  const [selectedGame, setSelectedGame] = useState<GameType | null>(null);
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState('');

  const categories = ['all', ...Array.from(new Set(games.map(g => g.category)))];

  const filteredGames = games.filter(game => {
    const matchesCategory = selectedCategory === 'all' || game.category === selectedCategory;
    const matchesSearch = game.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         game.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const selectedGameData = selectedGame ? games.find(g => g.id === selectedGame) : null;

  const getCategoryLabel = (category: string) => {
    const labels: Record<string, string> = {
      all: 'üéØ –í—Å–µ',
      arcade: 'üéÆ –ê—Ä–∫–∞–¥—ã',
      strategy: 'üß† –°—Ç—Ä–∞—Ç–µ–≥–∏–∏',
      racing: 'üèéÔ∏è –ì–æ–Ω–∫–∏',
      puzzle: 'üß© –ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∏',
      rpg: 'üó°Ô∏è RPG',
      social: 'üë• –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ',
      clicker: 'üëÜ –ö–ª–∏–∫–µ—Ä—ã',
      adventure: 'üó∫Ô∏è –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
      action: '‚öîÔ∏è –≠–∫—à–µ–Ω',
      simulation: 'üèóÔ∏è –°–∏–º—É–ª—è—Ç–æ—Ä—ã',
      platformer: 'üéØ –ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä—ã',
      memory: 'üß† –ü–∞–º—è—Ç—å',
      educational: 'üìö –û–±—É—á–∞—é—â–∏–µ',
      kids: 'üë∂ –î–µ—Ç—Å–∫–∏–µ',
    };
    return labels[category] || category;
  };

  return (
    <AdminProvider>
      <div className="min-h-screen bg-gradient-to-br from-pixel-dark via-gray-900 to-pixel-dark">
        <div className="container mx-auto px-4 py-8">
          <div className="flex justify-center mb-6">
            <Link 
              to="/"
              className="px-6 py-2 bg-gray-700/50 hover:bg-gray-700 text-white rounded-lg font-semibold transition-colors flex items-center gap-2 border border-gray-600/50"
            >
              ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>
          </div>

          <div className="text-center mb-8">
            <h1 className="font-orbitron text-4xl md:text-5xl text-retro-orange mb-4">
              üéÆ –ò–≥—Ä–æ–≤–∞—è –ê—Ä–∫–∞–¥–∞
            </h1>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              28 –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –∏–≥—Ä –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤! üöÄ
            </p>
            <div className="flex justify-center gap-2 mt-3">
              <span className="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full text-xs font-semibold">üë∂ 14 –¥–µ—Ç—Å–∫–∏—Ö (4-5 –ª–µ—Ç)</span>
              <span className="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-xs font-semibold">üéÆ 14 –∫–ª–∞—Å—Å–∏–∫–∞</span>
            </div>
            <p className="text-sm text-retro-orange/70 mt-2">
              –°–æ–∑–¥–∞–Ω—ã @war_references —Å –ª—é–±–æ–≤—å—é! ‚ù§Ô∏è
            </p>
          </div>

          {selectedGame && selectedGameData ? (
            <div className="space-y-6">
              <div className="flex justify-center">
                <button
                  onClick={() => setSelectedGame(null)}
                  className="px-6 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-semibold transition-colors flex items-center gap-2"
                >
                  ‚Üê –ù–∞–∑–∞–¥ –∫ –∏–≥—Ä–∞–º
                </button>
              </div>
              
              <div className="flex justify-center">
                {selectedGameData.component ? (
                  <selectedGameData.component />
                ) : (
                  <MiniGame 
                    id={selectedGameData.id}
                    title={selectedGameData.title}
                    emoji={selectedGameData.emoji}
                    color={selectedGameData.color || 'blue'}
                    gameType={selectedGameData.gameType || 'clicker'}
                  />
                )}
              </div>
            </div>
          ) : (
            <>
              <div className="mb-6 max-w-2xl mx-auto">
                <div className="relative">
                  <input
                    type="text"
                    placeholder="üîç –ü–æ–∏—Å–∫ –∏–≥—Ä—ã..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full px-4 py-3 bg-gray-800/50 border border-retro-orange/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-retro-orange"
                  />
                  {searchQuery && (
                    <button
                      onClick={() => setSearchQuery('')}
                      className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-white"
                    >
                      ‚úï
                    </button>
                  )}
                </div>
              </div>

              <div className="flex flex-wrap justify-center gap-2 mb-8">
                {categories.map(category => (
                  <button
                    key={category}
                    onClick={() => setSelectedCategory(category)}
                    className={`px-3 py-1.5 rounded-lg font-semibold transition-all duration-300 text-xs ${
                      selectedCategory === category
                        ? 'bg-retro-orange text-white shadow-lg scale-105'
                        : 'bg-pixel-dark/50 text-retro-orange hover:bg-retro-orange/20 border border-retro-orange/30'
                    }`}
                  >
                    {getCategoryLabel(category)}
                  </button>
                ))}
              </div>

              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 max-w-7xl mx-auto">
                {filteredGames.map(game => (
                  <div
                    key={game.id}
                    onClick={() => setSelectedGame(game.id)}
                    className={`group cursor-pointer transform transition-all duration-300 hover:scale-105 ${
                      game.featured ? 'ring-2 ring-retro-orange/50' : ''
                    }`}
                  >
                    <div className="bg-gradient-to-br from-pixel-dark/80 to-gray-900/80 border border-retro-orange/30 rounded-xl p-4 h-full hover:border-retro-orange/60 hover:shadow-xl hover:shadow-retro-orange/20">
                      <div className="flex justify-between items-start mb-2">
                        <div className="text-3xl">{game.emoji}</div>
                        <div className="flex flex-col gap-1">
                          {game.isKids && (
                            <div className="text-xs px-2 py-0.5 bg-purple-500/30 text-purple-300 rounded-full border border-purple-400/30">
                              üë∂
                            </div>
                          )}
                          {game.featured && (
                            <div className="text-xs px-2 py-0.5 bg-yellow-500/20 text-yellow-400 rounded-full">
                              ‚≠ê
                            </div>
                          )}
                        </div>
                      </div>

                      <h3 className="font-orbitron text-sm text-retro-orange mb-1 group-hover:text-white transition-colors line-clamp-1">
                        {game.title}
                      </h3>

                      <p className="text-muted-foreground text-xs mb-2 line-clamp-2">
                        {game.description}
                      </p>

                      <div className="flex justify-center">
                        <div className="px-3 py-1 bg-retro-orange/20 group-hover:bg-retro-orange group-hover:text-white text-retro-orange rounded-lg font-semibold transition-all duration-300 text-xs">
                          üéÆ –ò–≥—Ä–∞—Ç—å
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {filteredGames.length === 0 && (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üîç</div>
                  <p className="text-xl text-gray-400">–ò–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                  <button
                    onClick={() => {
                      setSearchQuery('');
                      setSelectedCategory('all');
                    }}
                    className="mt-4 px-6 py-2 bg-retro-orange hover:bg-retro-orange/80 text-white rounded-lg font-semibold transition-colors"
                  >
                    –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                  </button>
                </div>
              )}

              <div className="mt-12 text-center">
                <div className="inline-flex items-center gap-8 px-8 py-4 bg-pixel-dark/50 rounded-xl border border-retro-orange/30">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">{games.length}</div>
                    <div className="text-sm text-muted-foreground">–ò–≥—Ä</div>
                  </div>
                  <div className="w-px h-12 bg-retro-orange/30"></div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">{categories.length - 1}</div>
                    <div className="text-sm text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
                  </div>
                  <div className="w-px h-12 bg-retro-orange/30"></div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-retro-orange">100%</div>
                    <div className="text-sm text-muted-foreground">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                  </div>
                </div>
              </div>
            </>
          )}
        </div>
        
        <AdminPanel />
      </div>
    </AdminProvider>
  );
}